'use strict'

angular.module('ccApp.services')

  .service 'questions', ->

    this.data = ->

      [{"tags":["User / Reviewer Experience"],"body":"Is there a runner script?","answer_options":["yes","no"],"notes":""},{"tags":["User / Reviewer Experience"],"body":"Is there a read me and does it explain how to run the app?","answer_options":["yes","no"],"notes":""},{"tags":["User / Reviewer Experience"],"body":"Is there a catch all errors clause handling unexpected errors?","answer_options":["yes","no"],"notes":""},{"tags":["User / Reviewer Experience"],"body":"Do invalid inputs result in helpful error messages?","answer_options":["stacktrace","unhelpful message","helpful message"],"notes":""},{"tags":["User / Reviewer Experience"],"body":"On scale from redundant to helpful, how are the comments?","answer_options":["redundant (state what the code does)","helpful (explain reasons behind design decisions)"],"notes":""},{"tags":["OOD"],"body":"Does the code follow Single Responsibility Principle?","answer_options":["rarely","occasionally","most times"],"notes":""},{"tags":["OOD"],"body":"Are classes & methods small?","answer_options":["yes","no"],"notes":""},{"tags":["OOD"],"body":"Are variable / method names descriptive?","answer_options":["rarely","occasionally","most times"],"notes":""},{"tags":["OOD"],"body":"Are methods easy to understand?\t","answer_options":["rarely","occasionally","most times"],"notes":""},{"tags":["OOD"],"body":"Is the domain design helpful to describing the solution?","answer_options":["rarely","occasionally","most times"],"notes":""},{"tags":["Testing"],"body":"Is there a separation between Functional / Integration / Unit test levels?","answer_options":["yes","no"],"notes":""},{"tags":["Testing"],"body":"Are functional tests written in a high level business oriented language?","answer_options":["yes","no"],"notes":""},{"tags":["Testing"],"body":"Do unit tests describe behaviour of each public method?","answer_options":["rarely","occasionally","most times"],"notes":""},{"tags":["Testing"],"body":"Do unit tests cover exceptional cases?","answer_options":["rarely","occasionally","most times"],"notes":""},{"tags":["Testing"],"body":"Does test naming follow: action - context pattern?","answer_options":["rarely","occasionally","most times"],"notes":""},{"tags":["Testing"],"body":"Do tests follow arrange-act-assert pattern?","answer_options":["rarely","occasionally","most times"],"notes":""},{"tags":["Tech","Ruby"],"body":"Has a code quality checker / test coverage tool been used?","answer_options":["quality checker","test coverage","both"],"notes":"\tFor example Cane, or Stylecop"},{"tags":["Tech","Ruby"],"body":"Do tests appropriately use describe and context blocks?","answer_options":["no","sometimes","most times"],"notes":"Appropriately meaning in line with betterspecs.org guidelines"},{"tags":["Tech","Ruby"],"body":"Does the code include appropriate use of list / map operations?","answer_options":["rarely","occasionally","most times"],"notes":""},{"tags":["Tech","Ruby"],"body":"Is Rakefile provided with relevant tasks & descriptions?","answer_options":["missing","present","well structured"],"notes":""},{"tags":["Tech","Ruby"],"body":"Is Gemfile provided with relevant gem groupings","answer_options":["missing","present","well structured"],"notes":""},{"tags":["Tech","Git"],"body":"Are changes grouped in small cohesive commits?","answer_options":["yes","no"],"notes":""},{"tags":["Tech","Git"],"body":"Are commit messages meaningful, do they communicate reasons for changes?","answer_options":["not relevant","yes","no"],"notes":""},{"tags":["Tech","Git"],"body":"Is there a meaningul gitignore?","answer_options":["not relevant","yes","no"],"notes":""},{"tags":["Tech","Linux"],"body":"Is the runner written as a shell script (starting with a hashbang)?","answer_options":["yes","no"],"notes":""},{"tags":["Tech","Linux"],"body":"Are relevant signals trapped (SIGINT, EXIT)?","answer_options":["yes","no"],"notes":""}]
